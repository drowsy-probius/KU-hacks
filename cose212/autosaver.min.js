class AutoSaverSwalError extends Error{constructor(e,r,t,o){super(),this.title=e,this.message=r,this.level=t,this.callback=o}}class AutoSaver{constructor(e){this.timer=-1,this.sleepMs=e&&e>0?e:500}isOutOfDue(e){const[,r,t,o,n,a]=/(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2})/.exec(e),i=new Date(r,t-1,o,n,a);return Date.now()>i}async validateLogin(){const e=await fetch("/php/validate-login.php",{method:"POST"});if(!e.ok)throw new AutoSaverSwalError("Error on /php/validate-login.php",JSON.stringify(e.status),"error");if(0===(await e.text()).length)throw new AutoSaverSwalError("Error on login","Name is null??","error",alert_login.bind(window))}async saveValue(e,r,t){const o=await fetch("/php/save.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({problem:e,contents:r,due:t})});if(!o.ok)throw new AutoSaverSwalError("Error on /php/save.php",JSON.stringify(o.status),"error");switch(await o.text()){case"success":return;case"abuse":throw new AutoSaverSwalError("Catch system library","The program includes system call. Check your code and delete the usage of system modules","error",editor.focus.bind(editor));case"length":throw new AutoSaverSwalError("Limited length","Your code is too large. please reduce it","error",editor.focus.bind(editor));case"over":throw new AutoSaverSwalError("Over due date","Since the due date is over, submit function is closed.","error",editor.focus.bind(editor));default:throw new AutoSaverSwalError("Fail to save","Try again to submit your code. If the error is continuously occured, please contact us.","error",editor.focus.bind(editor))}}async runner(){const e=vm.hw_selected,r=vm.problem_selected;if(-1===r||-1===e)return;if(!("name"in problemSet[r])||!("term"in problemSet[r]))return;const t=problemSet[r].name,o=problemSet[r].term;if(this.isOutOfDue(o))return;const n=editor.getValue();0!==n.trim().length&&(clearInterval(this.timer),this.timer=setTimeout((async()=>{this.validateLogin().then((()=>this.saveValue(t,n,o))).catch((e=>{e instanceof AutoSaverSwalError?swal(e.title,e.message,e.level).then((()=>{e.callback&&e.callback()})):swal("Error on AutoSaver",JSON.stringify(e,Object.getOwnPropertyNames(e)),"error")}))}),this.sleepMs))}}const dependencyCheckAndRun=()=>{if(!window.autoSaver){if(void 0===window.editor||null===window.editor||void 0===window.vm||null===window.vm||void 0===window.problemSet||null===window.problemSet||void 0===window.alert_login||null===window.alert_login||void 0===window.swal||null===window.swal)return setTimeout(dependencyCheckAndRun,100);window.autoSaver=new AutoSaver,editor.on("change",window.autoSaver.runner.bind(window.autoSaver)),console.log("[AUTOSAVER] script loaded!")}};dependencyCheckAndRun();
